name: Release

on:
  workflow_run:
    workflows: ['Build']
    types: [completed]
    branches:
      - master
      - beta
      - pre-release

jobs:  
  semantic_release:
    runs-on: ubuntu-latest
    permissions:
        contents: write
        issues: write
        pull-requests: write
        id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Get latest tag before semantic release
        id: get-latest-tag-before-semantic-release
        run: |
          TAG_BEFORE_RELEASE=$(git describe --tags $(git rev-list --tags --max-count=1) || echo '0.0.0')
          echo "LATEST_TAG_BEFORE_SEMANTIC_RELEASE=TAG_BEFORE_RELEASE" >> "$GITHUB_OUTPUT"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install @semantic-release/git @semantic-release/github semantic-release-replace-plugin -D

      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  publish_nuget:
    needs: semantic_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Get latest tag
        id: get-latest-tag
        run: |
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo '0.0.0')
          echo "LATEST_TAG=$TAG" >> $GITHUB_ENV

      - name: Check if tags are different
        id: check-tags
        env:
          LATEST_TAG_BEFORE_SEMANTIC_RELEASE: ${{ steps.get-latest-tag-before-semantic-release.outputs.LATEST_TAG_BEFORE_SEMANTIC_RELEASE }}
        run: |
          if [ "${{ env.LATEST_TAG_BEFORE_SEMANTIC_RELEASE }}" = "${{ env.LATEST_TAG }}" ]; then
            echo "Tags are the same. Skipping publish."
            exit 0
          fi

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build NuGet package
        run: dotnet pack --configuration Release -p:PackageVersion=${{ env.LATEST_TAG }}

      - name: Publish NuGet package
        run: dotnet nuget push **/bin/Release/RapidRepo*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}