name: Release

on:
  push:
    branches:
      - master
      - beta
      - pre-release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build
        run: dotnet build --configuration Release

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Test
        run: dotnet test --configuration Release --logger trx

  semantic_release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
        contents: write # to be able to publish a GitHub release
        issues: write # to be able to comment on released issues
        pull-requests: write # to be able to comment on released pull requests
        id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.x'

      - name: Install dependencies
        run: npm install @semantic-release/git @semantic-release/github semantic-release-replace-plugin -D

      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  publish_nuget:
    needs: semantic_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get lastest tag
        id: get-latest-tag
        run: echo ::set-output name=latest_tag::$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build NuGet package
        run: dotnet pack --configuration Release -p:PackageVersion=${{ steps.get-latest-tag.outputs.latest_tag }}

      - name: Publish NuGet package
        run: dotnet nuget push .RapidRepo/RapidRepo/bin/Release/RapidRepo*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }}
